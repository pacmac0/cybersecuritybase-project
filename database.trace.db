2018-12-19 18:28:30 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "SIGNUPS" already exists; SQL statement:
CREATE TABLE signups (
    name varchar(200) PRIMARY KEY,
    address varchar(200)
) [42101-193]
2018-12-19 18:28:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "SIGNUPS" already exists; SQL statement:
CREATE TABLE signups (
    name varchar(200) PRIMARY KEY,
    address varchar(200)
) [42101-193]
2018-12-19 18:28:55 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "SIGNUPS" already exists; SQL statement:
CREATE TABLE signups (
    name varchar(200) PRIMARY KEY,
    address varchar(200)
) [42101-193]
2018-12-19 18:30:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "SIGNUPS" already exists; SQL statement:
CREATE TABLE signups (
    name varchar(200) PRIMARY KEY,
    address varchar(200)
) [42101-193]
2018-12-19 18:30:18 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "SIGNUPS" already exists; SQL statement:
CREATE TABLE signups (
    name varchar(200) PRIMARY KEY,
    address varchar(200)
) [42101-193]
2018-12-19 18:33:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "SIGNUPS" already exists; SQL statement:
CREATE TABLE signups (
    name varchar(200) PRIMARY KEY,
    address varchar(200)
) [42101-193]
2018-12-19 18:33:26 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "SIGNUPS" already exists; SQL statement:
CREATE TABLE signups (
    name varchar(200) PRIMARY KEY,
    address varchar(200)
) [42101-193]
2018-12-19 18:35:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "SIGNUPS" already exists; SQL statement:
CREATE TABLE signups (
    name varchar(200) PRIMARY KEY,
    address varchar(200)
) [42101-193]
2018-12-19 18:35:15 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "SIGNUPS" already exists; SQL statement:
CREATE TABLE signups (
    name varchar(200) PRIMARY KEY,
    address varchar(200)
) [42101-193]
2018-12-19 18:35:54 jdbc[5]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:184)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:126)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:247)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 15 more
2018-12-19 18:35:54 jdbc[5]: exception
org.h2.jdbc.JdbcSQLException: Table "SIGNUPS" already exists; SQL statement:
CREATE TABLE signups (
    name varchar(200) PRIMARY KEY,
    address varchar(200)
) [42101-193]
2018-12-19 18:43:42 jdbc[6]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:127)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:718)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:650)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:468)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:143)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:342)
	at org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:139)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getDefaultDdlAuto(JpaProperties.java:224)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getOrDeduceDdlAuto(JpaProperties.java:212)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getAdditionalProperties(JpaProperties.java:188)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.access$000(JpaProperties.java:129)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.getHibernateProperties(JpaProperties.java:126)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration.getVendorProperties(HibernateJpaAutoConfiguration.java:103)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.entityManagerFactory(JpaBaseConfiguration.java:117)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$89defc5d.CGLIB$entityManagerFactory$5(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$89defc5d$$FastClassBySpringCGLIB$$3387adcc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$89defc5d.entityManagerFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1128)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1022)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:761)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:371)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1186)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1175)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:184)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:126)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:247)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 15 more
2018-12-19 18:49:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-19 18:49:47 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-19 18:50:11 jdbc[5]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:184)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:126)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:247)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 15 more
2018-12-19 18:50:11 jdbc[5]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-19 18:50:30 jdbc[5]: exception
org.h2.jdbc.JdbcSQLException: Column "ADMIN" not found; SQL statement:
SELECT password FROM accounts WHERE name=admin [42122-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.expression.Comparison.optimize(Comparison.java:180)
	at org.h2.command.dml.Select.prepare(Select.java:856)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:73)
	at sec.project.controller.SignupController.login(SignupController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:220)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:121)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:124)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1410)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-12-19 18:52:33 jdbc[6]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:127)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:718)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:650)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:468)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:143)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:342)
	at org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:139)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getDefaultDdlAuto(JpaProperties.java:224)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getOrDeduceDdlAuto(JpaProperties.java:212)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getAdditionalProperties(JpaProperties.java:188)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.access$000(JpaProperties.java:129)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.getHibernateProperties(JpaProperties.java:126)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration.getVendorProperties(HibernateJpaAutoConfiguration.java:103)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.entityManagerFactory(JpaBaseConfiguration.java:117)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$148b10b8.CGLIB$entityManagerFactory$5(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$148b10b8$$FastClassBySpringCGLIB$$887f7c0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$148b10b8.entityManagerFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1128)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1022)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:761)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:371)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1186)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1175)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:184)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:126)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:247)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 15 more
2018-12-19 18:52:33 jdbc[6]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-19 18:52:46 jdbc[6]: exception
org.h2.jdbc.JdbcSQLException: No data is available [2000-193]
2018-12-19 18:52:54 jdbc[6]: exception
org.h2.jdbc.JdbcSQLException: No data is available [2000-193]
2018-12-19 18:53:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-19 18:53:12 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-19 18:53:42 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: No data is available [2000-193]
2018-12-19 18:56:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-19 18:56:01 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-19 18:56:31 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: No data is available [2000-193]
2018-12-19 18:56:38 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: No data is available [2000-193]
2018-12-19 18:57:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-19 18:57:41 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-19 18:58:16 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: No data is available [2000-193]
2018-12-19 18:59:45 jdbc[5]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:184)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:126)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:247)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 15 more
2018-12-19 18:59:45 jdbc[5]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-19 18:59:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-19 18:59:50 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-19 19:02:41 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting " true"; SQL statement:
SELECT password FROM accounts WHERE name='peter' or' true' [22018-193]
2018-12-19 19:08:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-19 19:08:58 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-19 19:10:13 jdbc[5]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:184)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:126)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:247)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 15 more
2018-12-19 19:10:13 jdbc[5]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-19 19:10:44 jdbc[6]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:127)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:718)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:650)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:468)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:143)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:342)
	at org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:139)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getDefaultDdlAuto(JpaProperties.java:224)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getOrDeduceDdlAuto(JpaProperties.java:212)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getAdditionalProperties(JpaProperties.java:188)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.access$000(JpaProperties.java:129)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.getHibernateProperties(JpaProperties.java:126)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration.getVendorProperties(HibernateJpaAutoConfiguration.java:103)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.entityManagerFactory(JpaBaseConfiguration.java:117)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$8cd9c95f.CGLIB$entityManagerFactory$5(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$8cd9c95f$$FastClassBySpringCGLIB$$dedf6185.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$8cd9c95f.entityManagerFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1128)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1022)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:761)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:371)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1186)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1175)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:184)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:126)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:247)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 15 more
2018-12-19 19:10:44 jdbc[6]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-19 19:10:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-19 19:10:49 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-19 19:11:30 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-19 19:11:30 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 14:26:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 14:26:28 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 14:48:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 14:48:09 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 14:49:30 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 14:49:30 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 14:59:47 jdbc[5]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:184)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:126)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:247)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 15 more
2018-12-20 14:59:47 jdbc[5]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 15:01:03 jdbc[6]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:127)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:718)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:650)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:468)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:143)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:342)
	at org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:139)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getDefaultDdlAuto(JpaProperties.java:224)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getOrDeduceDdlAuto(JpaProperties.java:212)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getAdditionalProperties(JpaProperties.java:188)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.access$000(JpaProperties.java:129)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.getHibernateProperties(JpaProperties.java:126)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration.getVendorProperties(HibernateJpaAutoConfiguration.java:103)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.entityManagerFactory(JpaBaseConfiguration.java:117)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$5a5b61b7.CGLIB$entityManagerFactory$5(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$5a5b61b7$$FastClassBySpringCGLIB$$ef68d567.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$5a5b61b7.entityManagerFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1128)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1022)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:761)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:371)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1186)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1175)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:184)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:126)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:247)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 15 more
2018-12-20 15:01:03 jdbc[6]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 15:02:06 jdbc[7]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:127)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:718)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:650)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:468)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:143)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:342)
	at org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:139)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getDefaultDdlAuto(JpaProperties.java:224)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getOrDeduceDdlAuto(JpaProperties.java:212)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getAdditionalProperties(JpaProperties.java:188)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.access$000(JpaProperties.java:129)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.getHibernateProperties(JpaProperties.java:126)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration.getVendorProperties(HibernateJpaAutoConfiguration.java:103)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.entityManagerFactory(JpaBaseConfiguration.java:117)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$5a5b61b7.CGLIB$entityManagerFactory$5(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$5a5b61b7$$FastClassBySpringCGLIB$$ef68d567.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$5a5b61b7.entityManagerFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1128)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1022)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:761)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:371)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1186)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1175)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:184)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:126)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:247)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 15 more
2018-12-20 15:02:06 jdbc[7]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 15:02:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 15:02:55 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 15:04:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 15:04:12 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 15:11:19 jdbc[5]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:184)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:126)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:247)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 15 more
2018-12-20 15:11:19 jdbc[5]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 15:12:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 15:12:31 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 15:28:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 15:28:18 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 15:37:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 15:37:07 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 15:38:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 15:38:20 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 15:53:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 15:53:06 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 15:59:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 15:59:25 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 16:11:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 16:11:19 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 16:36:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 16:36:05 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 16:39:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 16:39:26 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 17:41:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 17:41:38 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 17:44:30 jdbc[5]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:184)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:126)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:247)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 15 more
2018-12-20 17:44:30 jdbc[5]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 17:48:54 jdbc[6]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:127)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:718)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:650)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:468)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:143)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:342)
	at org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:139)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getDefaultDdlAuto(JpaProperties.java:224)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getOrDeduceDdlAuto(JpaProperties.java:212)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getAdditionalProperties(JpaProperties.java:188)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.access$000(JpaProperties.java:129)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.getHibernateProperties(JpaProperties.java:126)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration.getVendorProperties(HibernateJpaAutoConfiguration.java:103)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.entityManagerFactory(JpaBaseConfiguration.java:117)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$1758b56c.CGLIB$entityManagerFactory$5(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$1758b56c$$FastClassBySpringCGLIB$$9fe29847.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$1758b56c.entityManagerFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1128)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1022)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:761)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:371)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1186)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1175)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:184)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:126)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:247)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 15 more
2018-12-20 17:48:54 jdbc[6]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 17:51:34 jdbc[7]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:127)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:718)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:650)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:468)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:143)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:342)
	at org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:139)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getDefaultDdlAuto(JpaProperties.java:224)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getOrDeduceDdlAuto(JpaProperties.java:212)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getAdditionalProperties(JpaProperties.java:188)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.access$000(JpaProperties.java:129)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.getHibernateProperties(JpaProperties.java:126)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration.getVendorProperties(HibernateJpaAutoConfiguration.java:103)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.entityManagerFactory(JpaBaseConfiguration.java:117)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$1758b56c.CGLIB$entityManagerFactory$5(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$1758b56c$$FastClassBySpringCGLIB$$9fe29847.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$1758b56c.entityManagerFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1128)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1022)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:761)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:371)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1186)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1175)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:184)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:126)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:247)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 15 more
2018-12-20 17:51:34 jdbc[7]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 17:53:47 jdbc[8]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:127)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:718)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:650)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:468)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:143)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:342)
	at org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:139)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getDefaultDdlAuto(JpaProperties.java:224)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getOrDeduceDdlAuto(JpaProperties.java:212)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getAdditionalProperties(JpaProperties.java:188)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.access$000(JpaProperties.java:129)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.getHibernateProperties(JpaProperties.java:126)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration.getVendorProperties(HibernateJpaAutoConfiguration.java:103)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.entityManagerFactory(JpaBaseConfiguration.java:117)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$1758b56c.CGLIB$entityManagerFactory$5(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$1758b56c$$FastClassBySpringCGLIB$$9fe29847.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$1758b56c.entityManagerFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1128)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1022)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:761)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:371)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1186)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1175)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:184)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:126)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:247)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 15 more
2018-12-20 17:53:47 jdbc[8]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 17:53:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 17:53:51 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 18:16:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 18:16:33 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 18:17:02 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" not found; SQL statement:
INSERT INTO ipBlock (ip, attempts) VALUES (ip, 1, 0); [42102-193]
2018-12-20 18:50:23 jdbc[5]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:184)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:126)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:247)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 15 more
2018-12-20 18:50:23 jdbc[5]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 18:51:19 jdbc[6]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:127)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:718)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:650)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:468)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:143)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:342)
	at org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:139)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getDefaultDdlAuto(JpaProperties.java:224)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getOrDeduceDdlAuto(JpaProperties.java:212)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.getAdditionalProperties(JpaProperties.java:188)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties$Hibernate.access$000(JpaProperties.java:129)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.getHibernateProperties(JpaProperties.java:126)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration.getVendorProperties(HibernateJpaAutoConfiguration.java:103)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.entityManagerFactory(JpaBaseConfiguration.java:117)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$1e025904.CGLIB$entityManagerFactory$5(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$1e025904$$FastClassBySpringCGLIB$$18500f3c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$1e025904.entityManagerFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1128)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1022)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:761)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:371)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1186)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1175)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:184)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:126)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:247)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 15 more
2018-12-20 18:51:19 jdbc[6]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 18:51:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 18:51:56 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:
CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 18:52:35 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" not found; SQL statement:
SELECT ip FROM ipBlock WHERE ip= ? [42102-193]
2018-12-20 18:54:57 jdbc[5]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:184)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:126)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:247)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 15 more
2018-12-20 18:54:57 jdbc[5]: exception
org.h2.jdbc.JdbcSQLException: Table "ACCOUNTS" already exists; SQL statement:


CREATE TABLE accounts (
    name varchar(200) PRIMARY KEY,
    password varchar(200)
) [42101-193]
2018-12-20 18:55:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-20 18:55:02 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-20 19:00:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-20 19:00:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-20 19:00:21 jdbc[5]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:184)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:126)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:247)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 15 more
2018-12-20 19:00:21 jdbc[5]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-20 19:13:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-20 19:13:45 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-20 19:14:04 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: No data is available [2000-193]
2018-12-20 19:14:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-20 19:14:35 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-20 19:14:44 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: No data is available [2000-193]
2018-12-20 19:18:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-20 19:18:47 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-20 19:19:09 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: No data is available [2000-193]
2018-12-20 19:20:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-20 19:20:16 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-20 19:21:57 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: No data is available [2000-193]
2018-12-20 19:22:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-20 19:22:03 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-20 19:35:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-20 19:35:06 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 12:20:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 12:20:20 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 12:22:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:

CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 12:22:44 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:

CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 12:27:30 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:

CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 12:27:30 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:

CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 12:47:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:

CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 12:47:11 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:

CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 12:50:11 jdbc[5]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:184)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:126)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:247)
	at sec.project.CyberSecurityBaseProjectApplication.main(CyberSecurityBaseProjectApplication.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 15 more
2018-12-21 12:50:11 jdbc[5]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:

CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 12:56:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:

CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 12:57:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:

CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 13:03:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:

CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 13:03:40 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:

CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 13:04:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:

CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 13:04:31 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:

CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 13:25:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:

CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 13:25:19 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:

CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 13:28:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:

CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 13:28:51 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:

CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 13:30:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:

CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 13:30:06 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:

CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 13:35:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:

CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 13:35:05 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:

CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 13:36:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:

CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 13:36:10 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:

CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 13:49:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:

CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 13:49:06 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:

CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 13:49:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:

CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 13:49:56 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:

CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 14:00:04 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 14:08:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 14:08:37 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 14:11:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-21 14:11:31 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-22 13:02:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-22 13:02:56 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-22 13:12:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-22 13:12:46 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-22 13:37:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-22 13:37:29 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-22 13:39:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-22 13:39:11 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-22 13:39:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-22 13:39:49 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-22 13:53:28 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting " true"; SQL statement:
SELECT password FROM accounts WHERE name='a' and password='peter' or' true' [22018-193]
2018-12-22 13:54:15 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting " true"; SQL statement:
SELECT password FROM accounts WHERE name='peter' or' true' and password='sxas' [22018-193]
2018-12-22 13:54:57 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting " True"; SQL statement:
SELECT password FROM accounts WHERE name='a' and password='peter' or' True' [22018-193]
2018-12-22 13:55:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-22 13:55:52 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-22 14:01:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-22 14:01:34 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-22 14:17:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-22 14:17:23 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-22 14:23:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-22 14:23:45 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-22 14:24:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-22 14:24:56 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-22 14:33:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
2018-12-22 14:33:05 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "IPBLOCK" already exists; SQL statement:
CREATE TABLE ipblock (
    ip varchar(20) PRIMARY KEY,
    attempts int(20)
) [42101-193]
